#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexColor;
layout(location = 2) in vec3 vertexNormal;

// Output data ; will be interpolated for each fragment.
out vec4 fragmentColor;

// Values that stay constant for the whole mesh.
uniform mat4 MVP;
uniform mat4 model_matrix;

void main() {
	gl_Position = model_matrix * vec4(vertexPosition_modelspace, 1);

	fragmentColor = vec4(vertexColor, 0.5f);
}
